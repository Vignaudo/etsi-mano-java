/*
 * SOL003 - VNF Lifecycle Management interface
 * SOL003 - VNF Lifecycle Management interface definition  IMPORTANT: Please note that this file might be not aligned to the current version of the ETSI Group Specification it refers to. In case of discrepancies the published ETSI Group Specification takes precedence.  In clause 4.3.2 of ETSI GS NFV-SOL 003 v2.4.1, an attribute-based filtering mechanism is defined. This mechanism is currently not included in the corresponding OpenAPI design for this GS version. Changes to the attribute-based filtering mechanism are being considered in v2.5.1 of this GS for inclusion in the corresponding future ETSI NFV OpenAPI design. Please report bugs to https://forge.etsi.org/bugzilla/buglist.cgi?component=Nfv-Openapis&list_id=61&product=NFV&resolution=
 *
 * OpenAPI spec version: 1.1.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.ubiqube.etsi.mano.model.nslcm.sol003;

import javax.validation.constraints.NotNull;

import com.fasterxml.jackson.annotation.JsonProperty;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * This type represents the information that allows addressing a virtualised
 * resource that is used by a VNF instance. Information about the resource is
 * available from the VIM.
 */
@ApiModel(description = "This type represents the information that allows addressing a virtualised resource that is used by a VNF instance. Information about the resource is available from the VIM. ")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaJerseyServerCodegen", date = "2019-06-13T10:04:39.223+02:00")
public class ResourceHandle {
	@JsonProperty("vimConnectionId")
	private String vimConnectionId = null;

	@JsonProperty("resourceProviderId")
	private String resourceProviderId = null;

	@JsonProperty("resourceId")
	private String resourceId = null;

	@JsonProperty("vimLevelResourceType")
	private String vimLevelResourceType = null;

	public ResourceHandle vimConnectionId(String vimConnectionId) {
		this.vimConnectionId = vimConnectionId;
		return this;
	}

	/**
	 * Identifier of the VIM connection to manage the resource. This attribute shall
	 * only be supported and present if VNF-related resource management in direct
	 * mode is applicable. The applicable \&quot;VimConnectionInfo\&quot; structure,
	 * which is referenced by vimConnectionId, can be obtained from the
	 * \&quot;vimConnectionInfo\&quot; attribute of the \&quot;VnfInstance\&quot;
	 * structure.
	 * 
	 * @return vimConnectionId
	 **/
	@JsonProperty("vimConnectionId")
	@ApiModelProperty(required = true, value = "Identifier of the VIM connection to manage the resource. This attribute shall only be supported and present if VNF-related resource management in direct mode is applicable. The applicable \"VimConnectionInfo\" structure, which is referenced by vimConnectionId, can be obtained from the \"vimConnectionInfo\" attribute of the \"VnfInstance\" structure. ")
	@NotNull
	public String getVimConnectionId() {
		return vimConnectionId;
	}

	public void setVimConnectionId(String vimConnectionId) {
		this.vimConnectionId = vimConnectionId;
	}

	public ResourceHandle resourceProviderId(String resourceProviderId) {
		this.resourceProviderId = resourceProviderId;
		return this;
	}

	/**
	 * Identifier of the entity responsible for the management of the resource. This
	 * attribute shall only be supported and present when VNF-related resource
	 * management in indirect mode is applicable. The identification scheme is
	 * outside the scope of the present document.
	 * 
	 * @return resourceProviderId
	 **/
	@JsonProperty("resourceProviderId")
	@ApiModelProperty(value = "Identifier of the entity responsible for the management of the resource. This attribute shall only be supported and present when VNF-related resource management in indirect mode is applicable. The identification scheme is outside the scope of the present document. ")
	public String getResourceProviderId() {
		return resourceProviderId;
	}

	public void setResourceProviderId(String resourceProviderId) {
		this.resourceProviderId = resourceProviderId;
	}

	public ResourceHandle resourceId(String resourceId) {
		this.resourceId = resourceId;
		return this;
	}

	/**
	 * Identifier of the resource in the scope of the VIM or the resource provider.
	 * 
	 * @return resourceId
	 **/
	@JsonProperty("resourceId")
	@ApiModelProperty(required = true, value = "Identifier of the resource in the scope of the VIM or the resource provider. ")
	@NotNull
	public String getResourceId() {
		return resourceId;
	}

	public void setResourceId(String resourceId) {
		this.resourceId = resourceId;
	}

	public ResourceHandle vimLevelResourceType(String vimLevelResourceType) {
		this.vimLevelResourceType = vimLevelResourceType;
		return this;
	}

	/**
	 * Type of the resource in the scope of the VIM or the resource provider.
	 * 
	 * @return vimLevelResourceType
	 **/
	@JsonProperty("vimLevelResourceType")
	@ApiModelProperty(value = "Type of the resource in the scope of the VIM or the resource provider. ")
	public String getVimLevelResourceType() {
		return vimLevelResourceType;
	}

	public void setVimLevelResourceType(String vimLevelResourceType) {
		this.vimLevelResourceType = vimLevelResourceType;
	}

	@Override
	public String toString() {
		final StringBuilder sb = new StringBuilder();
		sb.append("class ResourceHandle {\n");

		sb.append("    vimConnectionId: ").append(toIndentedString(vimConnectionId)).append("\n");
		sb.append("    resourceProviderId: ").append(toIndentedString(resourceProviderId)).append("\n");
		sb.append("    resourceId: ").append(toIndentedString(resourceId)).append("\n");
		sb.append("    vimLevelResourceType: ").append(toIndentedString(vimLevelResourceType)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}
}
